// <auto-generated />
using System;
using LoanApplicationAPI;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LoanApplicationAPI.Migrations
{
    [DbContext(typeof(LoanApplicationDbContext))]
    partial class LoanApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("AvidaKodTest.Domain.State.LoanApplicationState", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Adress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("LoanAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("LoanDurationInMonths")
                        .HasColumnType("int");

                    b.Property<decimal>("MonthlyIncome")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("PeriodEnd")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnName("PeriodEnd");

                    b.Property<DateTime>("PeriodStart")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnName("PeriodStart");

                    b.Property<int>("ProductType")
                        .HasColumnType("int");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Zip")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("LoanApplication", (string)null);

                    b.ToTable(tb => tb.IsTemporal(ttb =>
                        {
                            ttb
                                .HasPeriodStart("PeriodStart")
                                .HasColumnName("PeriodStart");
                            ttb
                                .HasPeriodEnd("PeriodEnd")
                                .HasColumnName("PeriodEnd");
                        }
                    ));
                });

            modelBuilder.Entity("AvidaKodTest.Domain.State.LoanApplicationState", b =>
                {
                    b.OwnsOne("AvidaKodTest.Domain.State.LoanApplicationDecisionState", "LoanApplicationDecision", b1 =>
                        {
                            b1.Property<Guid>("LoanApplicationStateId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<bool>("Approved")
                                .HasColumnType("bit");

                            b1.Property<DateTime>("PeriodEnd")
                                .ValueGeneratedOnAddOrUpdate()
                                .HasColumnType("datetime2")
                                .HasColumnName("PeriodEnd");

                            b1.Property<DateTime>("PeriodStart")
                                .ValueGeneratedOnAddOrUpdate()
                                .HasColumnType("datetime2")
                                .HasColumnName("PeriodStart");

                            b1.HasKey("LoanApplicationStateId");

                            b1.ToTable("LoanApplicationDecision", (string)null);

                            b1.ToTable(tb => tb.IsTemporal(ttb =>
                                {
                                    ttb
                                        .HasPeriodStart("PeriodStart")
                                        .HasColumnName("PeriodStart");
                                    ttb
                                        .HasPeriodEnd("PeriodEnd")
                                        .HasColumnName("PeriodEnd");
                                }
                            ));

                            b1.WithOwner()
                                .HasForeignKey("LoanApplicationStateId");
                        });

                    b.Navigation("LoanApplicationDecision")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
